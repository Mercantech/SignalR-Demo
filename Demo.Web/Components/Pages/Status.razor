@page "/status"
@rendermode InteractiveServer
@using Microsoft.AspNetCore.SignalR.Client
@using System.Text.Json
@using Demo.Web.Models
@inject IJSRuntime JSRuntime

<PageTitle>SignalR Status Monitor</PageTitle>

<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <h1 class="display-4 text-primary mb-4">SignalR Status Monitor</h1>
            
            @if (!isConnected)
            {
                <div class="card mb-4">
                    <div class="card-body text-center">
                        <h5>Forbind til Status Monitor</h5>
                        <button class="btn btn-primary" @onclick="ConnectToStatus" disabled="@isConnecting">
                            @if (isConnecting)
                            {
                                <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
                                <span>Forbinder...</span>
                            }
                            else
                            {
                                <i class="fas fa-chart-line"></i> @("Forbind til Status")
                            }
                        </button>
                    </div>
                </div>
            }
            else
            {
                <div class="card mb-4">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">Status Monitor - Live Data</h5>
                        <div>
                            <span class="badge @(isConnected ? "bg-success" : "bg-danger") me-2">
                                @(isConnected ? "Forbundet" : "Afbrudt")
                            </span>
                            <button class="btn btn-outline-danger btn-sm" @onclick="DisconnectFromStatus">
                                <i class="fas fa-sign-out-alt"></i> Afbryd
                            </button>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-3">
                                <div class="card bg-primary text-white">
                                    <div class="card-body text-center">
                                        <h3>@statusData?.TotalConnections</h3>
                                        <p class="mb-0">Total Forbindelser</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="card bg-success text-white">
                                    <div class="card-body text-center">
                                        <h3>@statusData?.ChatConnections</h3>
                                        <p class="mb-0">Chat Forbindelser</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="card bg-info text-white">
                                    <div class="card-body text-center">
                                        <h3>@statusData?.StatusConnections</h3>
                                        <p class="mb-0">Status Monitors</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="card bg-warning text-white">
                                    <div class="card-body text-center">
                                        <h3>@(statusData?.ActiveUsers?.Count ?? 0)</h3>
                                        <p class="mb-0">Aktive Brugere</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="mt-3">
                            <small class="text-muted">
                                <i class="fas fa-clock"></i> Sidst opdateret: @(statusData?.LastUpdated.ToString("HH:mm:ss") ?? "Aldrig")
                            </small>
                        </div>
                    </div>
                </div>

                <!-- Aktive Brugere -->
                @if (statusData?.ActiveUsers?.Any() == true)
                {
                    <div class="card mb-4">
                        <div class="card-header">
                            <h5 class="mb-0">Aktive Brugere</h5>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                @foreach (var user in statusData.ActiveUsers)
                                {
                                    <div class="col-md-3 mb-2">
                                        <span class="badge bg-success fs-6">
                                            <i class="fas fa-user"></i> @user
                                        </span>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                }

                <!-- Forbindelses Detaljer -->
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">Forbindelses Detaljer</h5>
                    </div>
                    <div class="card-body p-0">
                        <div class="table-responsive">
                            <table class="table table-striped table-hover mb-0">
                                <thead class="table-dark">
                                    <tr>
                                        <th>Connection ID</th>
                                        <th>Brugernavn</th>
                                        <th>Type</th>
                                        <th>Forbundet Siden</th>
                                        <th>Varighed</th>
                                        <th>IP Adresse</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (statusData?.Connections?.Any() == true)
                                    {
                                        @foreach (var connection in statusData.Connections.OrderBy(c => c.ConnectedAt))
                                        {
                                            <tr>
                                                <td>
                                                    <code class="small">@connection.ConnectionId.Substring(0, Math.Min(8, connection.ConnectionId.Length))...</code>
                                                </td>
                                                <td>
                                                    @if (!string.IsNullOrEmpty(connection.Username))
                                                    {
                                                        <span class="badge bg-primary">@connection.Username</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="text-muted">-</span>
                                                    }
                                                </td>
                                                <td>
                                                    @if (connection.IsChatConnection)
                                                    {
                                                        <span class="badge bg-success">Chat</span>
                                                    }
                                                    else if (connection.IsStatusMonitor)
                                                    {
                                                        <span class="badge bg-info">Status</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge bg-secondary">Ukendt</span>
                                                    }
                                                </td>
                                                <td>@connection.ConnectedAt.ToString("HH:mm:ss")</td>
                                                <td>
                                                    <span class="text-muted">
                                                        @if (connection.ConnectionDuration.TotalHours >= 1)
                                                        {
                                                            @($"{connection.ConnectionDuration.Hours}h {connection.ConnectionDuration.Minutes}m")
                                                        }
                                                        else if (connection.ConnectionDuration.TotalMinutes >= 1)
                                                        {
                                                            @($"{connection.ConnectionDuration.Minutes}m {connection.ConnectionDuration.Seconds}s")
                                                        }
                                                        else
                                                        {
                                                            @($"{connection.ConnectionDuration.Seconds}s")
                                                        }
                                                    </span>
                                                </td>
                                                <td>
                                                    <code class="small">@connection.RemoteIpAddress</code>
                                                </td>
                                            </tr>
                                        }
                                    }
                                    else
                                    {
                                        <tr>
                                            <td colspan="6" class="text-center text-muted">Ingen aktive forbindelser</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@code {
    private HubConnection? hubConnection;
    private bool isConnected = false;
    private bool isConnecting = false;
    private StatusData? statusData;

    protected override Task OnInitializedAsync()
    {
        return Task.CompletedTask;
    }

    private async Task ConnectToStatus()
    {
        isConnecting = true;
        StateHasChanged();

        try
        {
            hubConnection = new HubConnectionBuilder()
                .WithUrl("http://localhost:5332/statushub")
                .WithAutomaticReconnect()
                .Build();

            // Event handlers
            hubConnection.On<StatusData>("StatusUpdated", (data) =>
            {
                statusData = data;
                InvokeAsync(StateHasChanged);
            });

            await hubConnection.StartAsync();
            isConnected = true;
            isConnecting = false;
            
            // Hent initial status
            statusData = await hubConnection.InvokeAsync<StatusData>("GetLiveStatus");
            
            StateHasChanged();
        }
        catch (Exception ex)
        {
            isConnecting = false;
            Console.WriteLine($"Error connecting to Status Hub: {ex.Message}");
            StateHasChanged();
        }
    }

    private async Task DisconnectFromStatus()
    {
        if (hubConnection != null)
        {
            await hubConnection.DisposeAsync();
            hubConnection = null;
        }
        isConnected = false;
        statusData = null;
        StateHasChanged();
    }

    public async ValueTask DisposeAsync()
    {
        if (hubConnection != null)
        {
            await hubConnection.DisposeAsync();
        }
    }
}
